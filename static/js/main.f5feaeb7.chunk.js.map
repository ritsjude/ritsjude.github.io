{"version":3,"sources":["config/loginConfig.js","components/NormalSchedule/NormalSchedule.module.css","components/Page/Page.module.css","ricoh_logo.png","components/QuicklySchedule/QuicklySchedule.module.css","api/Api.ts","components/NormalSchedule/NormalSchedule.tsx","components/QuicklySchedule/QuicklySchedule.tsx","components/SettingPage/SettingPage.tsx","components/Page/Page.tsx","components/Login/Login.tsx","store/Store.ts","store/QuickStore.ts","store/SettingPageStore.ts","store/PageStore.ts","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","appId","scopes","calendar","subject_content","user_email_input","user_email_list","trigger","logo","__webpack_require__","p","moveUpEnd","Api","_this","this","Object","classCallCheck","baseUrl","msalInstance","loginPopup","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","config","prompt","catch","err","console","log","stop","logout","acquireTokenSilent","_callee2","accessToken","_context2","sent","abrupt","getAccount","UserAgentApplication","auth","clientId","cache","cacheLocation","storeAuthStateInCookie","gInit","client","Client","init","authProvider","done","getAuthenticatedClientToken","api","filter","get","events","user","schedule","post","scheduleRes","value","search","concat","emails","photoBlob","url","window","URL","webkitURL","blobUrl","createObjectURL","meetingTimeSuggestionsResult","freeTime","axios","rooms","data","users","id","put","res","newUser","addUserRes","InputGroup","input","Group","moment","locale","NormalSchedule","inject","observer","props","possibleConstructorReturn","getPrototypeOf","call","_isMounted","store","calendarComponentRef","React","createRef","gInitApi","state","subjectContent","UTCTime","startTime","endTime","dataSource","autoCompleteValue","attendees","resources","isModalVisible","selectedMeetingInfo","name","address","localTime","isSchedule","currentRoomsInfo","currentRooms","startSchedule","_this$state","myInfo","obj","timer","message","warning","setState","subject","body","contentType","content","start","dateTime","timeZone","end","location","displayName","locationEmailAddress","emailAddress","type","getUserDetails","mail","push","forEach","currentVal","scheduleMeetingRoom","setInterval","getEvents","status","response","clearInterval","getSchedule","_callee3","startDateTime","endDateTime","localUserSettingJson","localUserSetting","roomArea","allRoomsPromise","myInfoPromise","_ref4","_ref5","allRooms","personalInfo","meetingTimeRes","_context3","subtract","utc","format","add","localStorage","getItem","JSON","parse","selectedArea","schedules","availabilityViewInterval","getAllMeetingRooms","Promise","all","slicedToArray","roomName","eventColor","stringify","unshift","map","currentValue","title","scheduleItems","val","resourceId","scheduleId","local","getSubjectContent","event","target","handleAutoCompleteSearch","_ref6","_callee4","resObj","userInfoList","emailList","_context4","length","getUserEmail","scoredEmailAddresses","_x","apply","arguments","onAutoCompleteSelect","setArr","Set","slice","selectedEmails","toConsumableArray","handleTimeSelect","info","startUTCTime","startStr","endUTCTime","endStr","localStartTime","localEndTime","resource","_resource","handleBtnOpenModal","handleMeetingDetail","handleModalCancel","handleModalOk","handleDeleteEmailItem","e","index","splice","handlePopupDetail","eventClickInfo","modal","react_default","createElement","width","onOk","handleStartTime","date","dateString","oldUTCTime","oldLocalTime","newUTCTime","assign","newLocalTime","handleEndTime","handleRoomLocationFocus","handleRoomPositionSelect","currentRoomInfo","_this2","_this$state2","pageStore","isAuthenticated","className","styles","es_button","style","marginBottom","onClick","main_esm","schedulerLicenseKey","defaultView","plugins","resourceTimelinePlugin","interactionPlugin","selectable","resourceLabelText","height","ref","select","header","left","center","right","minTime","maxTime","eventRender","nowIndicator","eventClick","visible","onCancel","okText","cancelText","confirmLoading","destroyOnClose","compact","placeholder","allowClear","onChange","auto_complete","autoClearSearchValue","backfill","onFocus","onSelect","marginLeft","marginRight","date_picker","showTime","minuteStep","disabledHours","hideDisabledOptions","defaultValue","onSearch","list","itemLayout","size","bordered","renderItem","item","Item","actions","react_router","to","Component","QuicklySchedule","userAgentApplication","startDate","Date","endDate","pollingBookMeeting","bind","assertThisInitialized","isBookMeeting","createMeeting","getMeetingTime","getMyMeetings","getCurrentAndNextEvents","handleMenuClick","loading","nextEvent","currentEvent","endLoading","delayLoading","QuicklyStore","nextProp","meetingTime","i","myEvents","meetingStatu","toISOString","setMinutes","getMinutes","settingPageStore","element","top","currentDate","orderby","count","setSeconds","getSeconds","isReminderOn","iCalUId","update","time","key","currentMeetingOrganizerName","currentMeetingStart","currentMeetingEnd","currentMeetingName","currentMeetingLocationName","nextMeetingOrganizerName","nextMeetingStart","nextMeetingEnd","nextMeetingName","nextMeetingLocationName","menu","react","es_menu","myState","organizer","background","padding","row","gutter","col","span","card","descriptions","label","dropdown","overlay","icon","SettingPage","selectRoomArea","_ref","setRoomArea","setItem","es_radio","Button","Header","Content","Sider","Page","prop","getUserProfile","userPromise","userPhotoPromise","accessTokenPromise","_ref2","_ref3","userPhoto","getUserPhotoUrl","setIsAuthenticated","isLoginLoading","email","error","userPhotoUrl","userEmail","t0","toggle","collapsed","login","_this$props","match","layout","collapsible","src","alt","theme","mode","defaultSelectedKeys","selectedKeys","pathname","react_router_dom","position","href","avatar","fontSize","margin","minHeight","exact","path","component","footer","centered","closable","Login","stores","quicklyStore","QuickStore_class","QuicklyScheduleStore","initializerDefineProperty","_descriptor","_descriptor2","autorun","reaction","Qloading","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","area","App","mobx_react_module","Boolean","hostname","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5feaeb7.chunk.js","sourcesContent":["module.exports = {\r\n    appId: '15707902-0070-4051-bb18-60147f098cc7',\r\n    scopes: [\r\n      \"user.read\",\r\n      \"calendars.read\",\r\n      \"calendars.readWrite.shared\",\r\n      \"people.read\",\r\n      // \"people.read.all\"\r\n    ]\r\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"NormalSchedule_calendar__oWDRH\",\"subject_content\":\"NormalSchedule_subject_content__3ckot\",\"user_email_input\":\"NormalSchedule_user_email_input__Yb8vo\",\"user_email_list\":\"NormalSchedule_user_email_list__11Hzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trigger\":\"Page_trigger__3c5rQ\",\"logo\":\"Page_logo__X9iZl\"};","module.exports = __webpack_public_path__ + \"static/media/ricoh_logo.79e6298e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveUpEnd\":\"QuicklySchedule_moveUpEnd__32igl\"};","import { UserAgentApplication } from 'msal';\r\nimport config from '../config/loginConfig';\r\nimport { Client } from \"@microsoft/microsoft-graph-client\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Api {\r\n    private static gInit: Api;\r\n    private baseUrl:string =\"http://172.25.78.146:1337\";\r\n    public msalInstance: UserAgentApplication;\r\n    // 单例模式\r\n    public static get init(): Api {\r\n        if (!this.gInit) {\r\n            this.gInit = new Api();\r\n            return this.gInit;\r\n        }\r\n        return this.gInit;\r\n    }\r\n    constructor() {\r\n        this.msalInstance = new UserAgentApplication({\r\n            auth: {\r\n                clientId: config.appId\r\n            },\r\n            cache: {\r\n                cacheLocation: \"localStorage\",\r\n                storeAuthStateInCookie: true\r\n            }\r\n        });\r\n    }\r\n\r\n    public loginPopup = async () => {\r\n        await this.msalInstance.loginPopup({\r\n            scopes: config.scopes,\r\n            prompt: \"select_account\"\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    public logout = () => {\r\n        this.msalInstance.logout();\r\n    }\r\n    public acquireTokenSilent = async () => {\r\n        // Get the access token silently\r\n        // If the cache contains a non-expired token, this function\r\n        // will just return the cached token. Otherwise, it will\r\n        // make a request to the Azure OAuth endpoint to get a token\r\n        let accessToken = await this.msalInstance.acquireTokenSilent({\r\n            scopes: config.scopes\r\n        });\r\n        return accessToken;\r\n    }\r\n    public getAccount = () => {\r\n        return this.msalInstance.getAccount();\r\n    }\r\n\r\n    public async getAuthenticatedClientToken() {\r\n        // Initialize Graph client\r\n        const accessToken:any = await this.msalInstance.acquireTokenSilent({\r\n            scopes: config.scopes\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })\r\n        const client = Client.init({\r\n            // Use the provided access token to authenticate\r\n            // requests\r\n            authProvider: done => {\r\n                done(null, accessToken.accessToken);\r\n            }\r\n        });\r\n        return client;\r\n    }\r\n    public async getEvents() {\r\n        const client = await this.getAuthenticatedClientToken();\r\n        const events = await client.api(\"/me/events\").filter(\"isOrganizer eq true\").get().catch((err)=>{console.log(err);});\r\n        return events;\r\n    }\r\n    public async getUserDetails() {\r\n        const client = await this.getAuthenticatedClientToken();\r\n        const user = await client.api(\"/me\").get().catch((err)=>{console.log(err);});\r\n        return user;\r\n    }\r\n    public async scheduleMeetingRoom(schedule: any) {\r\n        const client = await this.getAuthenticatedClientToken();\r\n        const scheduleRes = await client.api(\"/me/events\").post(schedule).catch((err)=>{console.log(err);});\r\n        return scheduleRes;\r\n    }\r\n\r\n    public async getUserEmail(value: any) {\r\n        const client = await this.getAuthenticatedClientToken();\r\n        const emails = await client.api(`/me/people`).search(`\"${value}\"`).get().catch((err)=>{console.log(err);});\r\n        return emails;\r\n    }\r\n    public async getUserPhotoUrl() {\r\n\r\n        const client = await this.getAuthenticatedClientToken();\r\n        const photoBlob = await client.api(`/me/photo/$value`).get().catch((err)=>{console.log(err);});\r\n        const url = window.URL || (window as any).webkitURL\r\n        const blobUrl = url.createObjectURL(photoBlob);\r\n        return blobUrl;\r\n    }\r\n    public async getSchedule(meetingTimeSuggestionsResult:any) {\r\n        const client = await this.getAuthenticatedClientToken();\r\n        const freeTime = await client.api(`/me/calendar/getSchedule`).post(meetingTimeSuggestionsResult).catch((err)=>{console.log(err);});\r\n        return freeTime;\r\n    }\r\n    public async getAllMeetingRooms(){\r\n        // strapi数据库中存的数据。\r\n        // const rooms = await axios.get(`${this.baseUrl}/ritsrooms/1`);\r\n        const rooms:any = await axios.get(`/data.json`).catch((err)=>{console.log(err);});\r\n        return rooms.data;\r\n    }\r\n    public async getAllLoginedUser(){\r\n        // strapi数据库中存的用户数据。\r\n        const users:any = await axios.get(`${this.baseUrl}/usersettings`).catch((err)=>{console.log(err);});\r\n        return users.data;\r\n    }\r\n    public async getSpecficIdUser(id:any){\r\n        // strapi数据库中存的用户数据。\r\n        const users:any = await axios.get(`${this.baseUrl}/usersettings/${id}`).catch((err)=>{console.log(err);});\r\n        return users.data;\r\n    }\r\n    public async updateLoginUser(id:any,data:any){\r\n        // 更新strapi数据库中存的用户数据。\r\n        const res = await axios.put(`${this.baseUrl}/usersettings/${id}`,data).catch((err)=>{console.log(err);});\r\n        return res;\r\n    }\r\n    public async addLoginUser(newUser:any){\r\n        // 添加strapi数据库中存的用户数据。\r\n        console.log(\"newUser:\",newUser);\r\n        const addUserRes = await axios.post(`${this.baseUrl}/usersettings/`,newUser).catch((err)=>{console.log(err);});\r\n        return addUserRes;\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Input, AutoComplete, List, Modal, DatePicker, message } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\r\nimport { observer, inject } from \"mobx-react\";\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport Api from \"../../api/Api\";\r\n// import Util from \"../../common/Util\"\r\nimport \"../../../node_modules/@fullcalendar/core/main.css\";\r\nimport \"../../../node_modules/@fullcalendar/timeline/main.css\";\r\nimport \"../../../node_modules/@fullcalendar/resource-timeline/main.css\";\r\n// import \"./NormalSchedule.css\"\r\nimport styles from './NormalSchedule.module.css';\r\nconst InputGroup = Input.Group;\r\nmoment.locale('zh-cn'); //全局设置本地中文\r\n\r\ninterface Props {\r\n    store:any\r\n}\r\ninterface State {\r\n    subjectContent:string;\r\n    UTCTime:any;\r\n    dataSource:any;\r\n    autoCompleteValue:string;\r\n    attendees:any;\r\n    events:any;\r\n    resources:any;\r\n    isModalVisible:boolean;\r\n    selectedMeetingInfo:any;\r\n    localTime:any;\r\n    isSchedule:boolean;\r\n    currentRoomsInfo:any;\r\n    currentRooms:any;\r\n}\r\n@inject(\"store\") @observer\r\nclass NormalSchedule extends Component<Props, State> {\r\n    private _isMounted = false;\r\n    private store:any;\r\n    public calendarComponentRef = React.createRef<FullCalendar>();\r\n    public gInitApi:Api;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.gInitApi = Api.init;\r\n        this.store = this.props.store;\r\n        // this.getToken();\r\n    }\r\n    state = {\r\n        subjectContent: \"\", // 会议主题\r\n        UTCTime:{\r\n            startTime:\"\", // UTC会议开始时间\r\n            endTime:\"\"    // UTC会议结束时间 \r\n        },\r\n        dataSource:[],  // antd AutoComplete 组件邮件用户名下拉选择框的数据\r\n        autoCompleteValue:\"\", // office365 查询用户邮件名列表的api需要的值\r\n        attendees:[], // 会议参数者数组\r\n        events:[],// fullCalendar 组件中需要的会议事件\r\n        resources:[],// 对应的会议室房间和登录用户的邮箱地址列表\r\n        isModalVisible:false, // 确认会议室地点和事件，弹出模态框\r\n        selectedMeetingInfo:{ // fullCalendar 组件中选择会议时间得到的信息\r\n            name:\"\",\r\n            address:\"\",\r\n        },\r\n        localTime:{\r\n            startTime:\"Start Time\", // 本地会议开始时间和结束时间\r\n            endTime:\"End Time\"\r\n        },\r\n        isSchedule:false,// 是否进行预约成功\r\n        currentRoomsInfo:[],// 当前设定项的所有会议室信息（会议室名和地址）\r\n        currentRooms:[], //当前设定项的所有会议室名列表\r\n    }\r\n    public async componentDidMount(){\r\n        this._isMounted = true;\r\n        this.getSchedule();\r\n        // let events = await this.gInitApi.getEvents();\r\n        // console.log(\"events:\",events);\r\n    }\r\n    public componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    public startSchedule = async ()=>{\r\n        const {subjectContent,UTCTime,attendees,selectedMeetingInfo } = this.state;\r\n        if(!subjectContent||!UTCTime.startTime||!UTCTime.endTime||!selectedMeetingInfo.address){\r\n            message.warning('请输入正确的参数！');\r\n            return;\r\n        }\r\n        console.log(\"[log]-->开始进行会议预约\");\r\n        this.setState({\r\n            isSchedule:true,\r\n            isModalVisible:true\r\n        })\r\n        let schedule = {\r\n            \"subject\": subjectContent,\r\n            \"body\": {\r\n              \"contentType\": \"HTML\",\r\n              \"content\": \"meeting content\"\r\n            },\r\n            \"start\": {\r\n                \"dateTime\": UTCTime.startTime,\r\n                \"timeZone\": \"China Standard Time\"\r\n            },\r\n            \"end\": {\r\n                \"dateTime\": UTCTime.endTime,\r\n                \"timeZone\": \"China Standard Time\"\r\n            },\r\n            \"location\":{\r\n                \"displayName\":selectedMeetingInfo.name,\r\n                \"locationEmailAddress\":selectedMeetingInfo.address\r\n\r\n            },\r\n            \"attendees\": [\r\n            //   {\r\n            //     \"emailAddress\": {\r\n            //       \"address\":\"He.Jun@cn.ricoh.com\",\r\n            //     //   \"name\": \"he jun\"\r\n            //     },\r\n            //     \"type\": \"required\"\r\n            //   },\r\n              {\r\n                \"emailAddress\": {\r\n                    \"address\":selectedMeetingInfo.address,\r\n                    \"name\":selectedMeetingInfo.name\r\n                },\r\n                \"type\": \"resource\"\r\n              }\r\n            ]\r\n        }\r\n        // 将自己的邮箱添加到参加者当中\r\n        const myInfo = await this.gInitApi.getUserDetails();\r\n        if(!myInfo){\r\n            return;\r\n        }\r\n        let obj:any = {\r\n            \"emailAddress\": {\r\n                \"address\":myInfo.mail,\r\n                \"name\": myInfo.displayName\r\n            },\r\n            \"type\": \"required\"\r\n        };\r\n        schedule.attendees.push(obj);\r\n        attendees.forEach((currentVal:any)=>{\r\n            let obj:any = {\r\n                \"emailAddress\": {\r\n                    \"address\":\"\",\r\n                    \"name\": \"unknow\"\r\n                },\r\n                \"type\": \"required\"\r\n            };\r\n            obj.emailAddress.address = currentVal;\r\n            schedule.attendees.push(obj);\r\n        })\r\n        console.log(\"[log]-->成功将预约会议室的参数对象拼接成功。\",schedule);\r\n        const scheduleRes = await this.gInitApi.scheduleMeetingRoom(schedule);\r\n        if(!scheduleRes){\r\n            this.setState({\r\n                isSchedule:false,\r\n            })\r\n            message.warning('日期参数出错！');\r\n            return;\r\n        }\r\n        console.log(\"[log]-->成功预约会议室,正在等待预约房间进行响应。\");\r\n        let timer = await setInterval(async ()=>{\r\n            let events = await this.gInitApi.getEvents();\r\n            // console.log(\"events:\",events);\r\n            console.log(\"[log]-->成功获取所有自己预约的会议事件。\");\r\n            let tempAttendees = events.value[0].attendees;\r\n\r\n            tempAttendees.forEach((currentVal:any) => {\r\n                if(currentVal.type === \"resource\" && currentVal.status.response === \"accepted\"){\r\n                    clearInterval(timer);\r\n                    console.log(\"[log]-->成功预约会议室,会议室接受了会议，并更新会议表格页面数据\");\r\n                    this.getSchedule();\r\n                    if(this._isMounted){\r\n                        this.setState({\r\n                            subjectContent: \"\",\r\n                            UTCTime:{\r\n                                startTime:\"\",\r\n                                endTime:\"\"\r\n                            },\r\n                            dataSource:[],\r\n                            autoCompleteValue:\"\",\r\n                            attendees:[],\r\n                            localTime:{\r\n                                startTime:\"Start Time\",\r\n                                endTime:\"End Time\"\r\n                            },\r\n                            isSchedule:false,\r\n                            isModalVisible:false\r\n                        })\r\n                    }\r\n                    return;\r\n                }else if(currentVal.type === \"resource\" && currentVal.status.response === \"declined\"){\r\n                    clearInterval(timer);\r\n                    console.log(\"[log]-->预约会议室失败，会议室可能已经被预订，并更新会议表格页面数据。\");\r\n                    this.getSchedule();\r\n                    if(this._isMounted){\r\n                        this.setState({\r\n                            subjectContent: \"\",\r\n                            UTCTime:{\r\n                                startTime:\"\",\r\n                                endTime:\"\"\r\n                            },\r\n                            dataSource:[],\r\n                            autoCompleteValue:\"\",\r\n                            attendees:[],\r\n                            localTime:{\r\n                                startTime:\"Start Time\",\r\n                                endTime:\"End Time\"\r\n                            },\r\n                            isSchedule:false,\r\n                            isModalVisible:false\r\n                        })\r\n                    }\r\n                    return;\r\n                }\r\n            });\r\n        },2000);\r\n    };\r\n    // 获取所有会议室预订情况\r\n    public getSchedule = async ()=>{\r\n        console.log(\"[log]--> 开始获取所有会议室的预定情况！\");\r\n        let resources:any = [];\r\n        let events:any = [];\r\n        const startDateTime = moment().subtract(20,'days').utc().format();\r\n        const endDateTime = moment().add(40,'days').utc().format();\r\n        const localUserSettingJson:any = localStorage.getItem(\"RITS_user_setting\");\r\n        const localUserSetting = JSON.parse(localUserSettingJson);\r\n\r\n        // const roomArea = this.store.settingPageStore.roomArea;\r\n        const roomArea = localUserSetting.selectedArea;\r\n        let  meetingTimeSuggestionsResult:any = {\r\n            schedules: [],\r\n            startTime: {\r\n                dateTime: startDateTime,\r\n                timeZone: \"UTC\"\r\n            },\r\n            endTime: {\r\n                dateTime: endDateTime,\r\n                timeZone: \"UTC\"\r\n            },\r\n            availabilityViewInterval: \"30\"\r\n        }\r\n        const allRoomsPromise:Promise<any> = this.gInitApi.getAllMeetingRooms();\r\n        const myInfoPromise:Promise<any> = this.gInitApi.getUserDetails();\r\n        const [allRooms,myInfo] = await Promise.all([allRoomsPromise,myInfoPromise]);\r\n        console.log(\"[log]--> 获取所有会议室\",allRooms);\r\n        console.log(\"[log]--> 得到用户的个人信息.\",myInfo);\r\n        if(!myInfo||!allRooms){\r\n            return;\r\n        }\r\n        /**\r\n        *  let rooms = [\r\n                {\r\n                    address:\"He.Jun@cn.ricoh.com\",\r\n                    roomName:\"HeJun\"\r\n                },\r\n                {\r\n                    // id:\"zcnr_00000008@cn.ricoh.com\",\r\n                    address:\"zcnr_00000008@cn.ricoh.com\",\r\n                    roomName:\"RITS-G7-West Conference Room 3(15)\"\r\n                },\r\n                {\r\n                    // id:\"zcnr_00000007@cn.ricoh.com\",\r\n                    address:\"zcnr_00000007@cn.ricoh.com\",\r\n                    roomName:\"RITS-G7-West Conference Room 2(15)\"\r\n                },\r\n            ];\r\n        */\r\n       \r\n\r\n        let personalInfo = {\r\n            address:myInfo.mail,\r\n            roomName:myInfo.displayName,\r\n            eventColor: 'orange'\r\n        }\r\n        const currentRoomsInfo:any = JSON.parse(JSON.stringify(allRooms[roomArea]))\r\n        allRooms[roomArea].unshift(personalInfo);\r\n\r\n        resources = allRooms[roomArea].map((currentValue:any)=>{\r\n            let obj:any = {};\r\n            obj.id = currentValue.address;\r\n            obj.title = currentValue.roomName;\r\n            currentValue.eventColor?(obj.eventColor=currentValue.eventColor):(obj.eventColor=\"\")\r\n            meetingTimeSuggestionsResult.schedules.push(currentValue.address)\r\n            return obj;\r\n        })\r\n\r\n        const meetingTimeRes = await this.gInitApi.getSchedule(meetingTimeSuggestionsResult);\r\n        if(!meetingTimeRes){\r\n            return;\r\n        }\r\n        console.log(\"[log]--> 成功得到所有的会议预约结果。\",meetingTimeRes);\r\n        meetingTimeRes.value.forEach((currentValue:any)=>{\r\n            currentValue.scheduleItems.forEach((val:any)=>{\r\n                let obj:any = {};\r\n                obj.resourceId = currentValue.scheduleId;\r\n                obj.id = currentValue.scheduleId;\r\n                obj.start = moment.utc(val.start.dateTime).local().format();\r\n                obj.end = moment.utc(val.end.dateTime).local().format();\r\n                obj.title = val.subject;\r\n                events.push(obj);\r\n            })\r\n        })\r\n        if(this._isMounted){\r\n            this.setState({\r\n                resources,\r\n                events,\r\n                currentRoomsInfo\r\n            })\r\n        }\r\n        console.log(\"[log]--> resource和events的state状态更新成功.\",resources,events);\r\n    }\r\n    // 得到会议标题\r\n    public getSubjectContent = (event:any)=>{\r\n        let val = event.target.value;\r\n        this.setState({\r\n            subjectContent:val\r\n        })\r\n    }\r\n\r\n    // 点击搜索并添加会议收件人邮箱\r\n    public handleAutoCompleteSearch = async (value:any) => {\r\n        console.log(\"[log]--> 开始通过输入框的输入值进行查找所有相关的邮件地址\");\r\n        console.log(\"filterValue:\",value);\r\n        this.setState({\r\n            autoCompleteValue:value\r\n        }); \r\n        if(!value || value.length >= 10){\r\n            return;\r\n        }\r\n        const resObj = await this.gInitApi.getUserEmail(value);\r\n        if(!resObj) {\r\n            return;\r\n        }\r\n        console.log(\"[log]获取所有的用户查询邮箱信息：\",resObj);\r\n        const userInfoList = resObj.value;\r\n\r\n        const emailList =  userInfoList.map((currentValue:any)=>{\r\n            return currentValue.scoredEmailAddresses[0].address;\r\n        })\r\n        console.log(\"[log]--> 成功获取所有相关的email地址.\",emailList);\r\n        this.setState({\r\n            dataSource: !value ? [] : emailList,\r\n        });\r\n    };\r\n    // 选择搜索框列表里的人时触发\r\n    public onAutoCompleteSelect = (value:any) => {\r\n        console.log(\"[log]--> 成功选择搜索的邮件地址列表！\",value);\r\n        // 使用Set去重\r\n        let setArr:any = new Set(this.state.attendees.slice());\r\n        setArr.add(value);\r\n        const selectedEmails:any = [...setArr];\r\n        console.log(\"[log]--> 所有被选中的邮件地址列表！\",selectedEmails);\r\n        this.setState({\r\n            autoCompleteValue:\"\",\r\n            attendees:selectedEmails\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 日历表时间选择弹出预约页面\r\n     */\r\n    public handleTimeSelect = (info:any)=>{\r\n        console.log(\"[log]--> 滑动会议室预约时间格，开始预定。\",info);\r\n        const startUTCTime:string = moment(info.startStr).utc().format();\r\n        const endUTCTime:string = moment(info.endStr).utc().format();\r\n        const localStartTime:string = moment.utc(startUTCTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n        const localEndTime:string = moment.utc(endUTCTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n        console.log(localStartTime,localEndTime);\r\n        this.setState({\r\n                isModalVisible:true,\r\n                UTCTime:{\r\n                    startTime:startUTCTime,\r\n                    endTime:endUTCTime\r\n                },\r\n                localTime:{\r\n                    startTime:localStartTime,\r\n                    endTime:localEndTime\r\n                },\r\n                selectedMeetingInfo:{\r\n                    name:info.resource._resource.title,\r\n                    address:info.resource._resource.id,\r\n                }\r\n        });\r\n        console.log(\"[log]--> 滑动会议室预约时间选择结束。\");\r\n    }\r\n    /**\r\n     * 按钮点击弹出预约页面\r\n     */\r\n    public handleBtnOpenModal = () =>{\r\n        const startUTCTime:string = moment().utc().format();\r\n        const endUTCTime:string = moment().add(30,'minutes').utc().format();\r\n        const localStartTime:string = moment.utc(startUTCTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n        const localEndTime:string = moment.utc(endUTCTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n        this.setState({\r\n            isModalVisible:true,\r\n            UTCTime:{\r\n                startTime:startUTCTime,\r\n                endTime:endUTCTime\r\n            },\r\n            localTime:{\r\n                startTime:localStartTime,\r\n                endTime:localEndTime\r\n            }\r\n        })\r\n    }\r\n    public handleMeetingDetail = (info:any)=>{\r\n    }\r\n    public handleModalCancel = ()=>{\r\n        console.log(\"[log]--> 模态框退出消失\");\r\n        this.setState({\r\n            isModalVisible:false,\r\n            UTCTime:{\r\n                startTime:\"\",\r\n                endTime:\"\"\r\n            },\r\n            localTime:{\r\n                startTime:\"Start Time\",\r\n                endTime:\"End Time\"\r\n            },\r\n            selectedMeetingInfo:{\r\n                name:\"\",\r\n                address:\"\"\r\n            }\r\n        })\r\n    }\r\n    public handleModalOk = ()=>{\r\n        console.log(\"[log]--> 点击模态框确认按钮\");\r\n        this.startSchedule();\r\n    }\r\n    public handleDeleteEmailItem = (e:any,index:any) =>{\r\n        let attendees = this.state.attendees;\r\n        // 删除待发邮箱列表项\r\n        this.state.attendees.splice(index,1);\r\n        this.setState({\r\n            attendees\r\n        })\r\n    }\r\n    public handlePopupDetail = (eventClickInfo:any) =>{\r\n        console.log(\"[log] 查看会议详细信息\",eventClickInfo);\r\n        const event = eventClickInfo.event;\r\n        const localStartTime = moment(event.start).format('YYYY年MM月DD日 - HH:mm');\r\n        const localEndTime = moment(event.end).format('YYYY年MM月DD日 - HH:mm');\r\n        console.log(localEndTime);\r\n        Modal.info({\r\n            title: (<h2>会议详细情报</h2>),\r\n            content: (\r\n              <div>\r\n                <h3>标题</h3>\r\n                <p>{event.title}</p>\r\n                <h3>会议时间</h3>\r\n                <p>{localStartTime} 至 {localEndTime}</p>\r\n              </div>\r\n            ),\r\n            width:\"450px\",\r\n            onOk() {},\r\n          });\r\n    }\r\n    public handleStartTime = (date:moment.Moment,dateString:string)=>{\r\n        const oldUTCTime = {\r\n            startTime:moment(dateString, 'YYYY年MM月DD日 HH:mm').utc().format(),\r\n            endTime:moment(dateString, 'YYYY年MM月DD日 HH:mm').add(\"m\",30).utc().format()\r\n        }\r\n        const oldLocalTime = {\r\n            startTime : moment(oldUTCTime.startTime).format('YYYY年MM月DD日 - HH:mm'),\r\n            endTime : moment(oldUTCTime.endTime).format('YYYY年MM月DD日 - HH:mm')\r\n        }\r\n\r\n        const newUTCTime = Object.assign({},this.state.UTCTime,oldUTCTime);\r\n        const newLocalTime = Object.assign({},this.state.localTime,oldLocalTime);\r\n        this.setState({\r\n            UTCTime:newUTCTime,\r\n            localTime:newLocalTime\r\n        })\r\n    }\r\n    public handleEndTime = (date:moment.Moment,dateString:string)=>{\r\n        const oldUTCTime = {\r\n            endTime:moment(dateString, 'YYYY年MM月DD日 HH:mm').utc().format(),\r\n        }\r\n        const oldLocalTime = {\r\n            endTime : moment(oldUTCTime.endTime).format('YYYY年MM月DD日 - HH:mm')\r\n        }\r\n        const newUTCTime = Object.assign({},this.state.UTCTime,oldUTCTime);\r\n        const newLocalTime = Object.assign({},this.state.localTime,oldLocalTime);\r\n        this.setState({\r\n            UTCTime:newUTCTime,\r\n            localTime:newLocalTime\r\n        })\r\n    }\r\n    public handleRoomLocationFocus = ()=>{\r\n        const {currentRoomsInfo} = this.state;\r\n        const currentRooms = currentRoomsInfo.map((currentVal:any)=>{\r\n            return currentVal.roomName;\r\n        })\r\n        this.setState({\r\n            currentRooms\r\n        })\r\n    }\r\n    public handleRoomPositionSelect = (value:any)=>{\r\n        console.log(\"[log]成功选择会议室：\",value);\r\n        let {currentRoomsInfo} = this.state;\r\n        const currentRoomInfo:any = currentRoomsInfo.filter((currentVal:any)=>{\r\n            return currentVal.roomName === value;\r\n        });\r\n        const selectedMeetingInfo:any = {\r\n            name:currentRoomInfo[0].roomName,\r\n            address:currentRoomInfo[0].address\r\n        }\r\n        this.setState({\r\n            selectedMeetingInfo\r\n        })\r\n    }\r\n    render() {\r\n        const {subjectContent,events,resources,autoCompleteValue,dataSource,attendees,isModalVisible,selectedMeetingInfo,localTime,isSchedule,currentRooms} = this.state;\r\n        if(!this.store.pageStore.isAuthenticated){\r\n            return (<Redirect to=\"/app\" />);\r\n        }\r\n        console.log(\"[log]NormalSchedule-state:\",this.state);\r\n        return <div>\r\n                <div className={styles.calendar}>\r\n                    <Button style={{\r\n                        marginBottom:\"10px\"\r\n                    }} type=\"primary\" onClick={this.handleBtnOpenModal}>\r\n                        会议预约\r\n                    </Button>\r\n                    <FullCalendar\r\n                        schedulerLicenseKey= 'GPL-My-Project-Is-Open-Source'\r\n                        defaultView=\"resourceTimeline\"\r\n                        plugins={[ resourceTimelinePlugin, interactionPlugin]}\r\n                        selectable={true}\r\n                        resources={resources}\r\n                        resourceLabelText= '会议室名'\r\n                        events={events}\r\n                        height=\"auto\"\r\n                        ref={ this.calendarComponentRef }\r\n                        // eventClick={this.handleMeetingDetail}\r\n                        select = {this.handleTimeSelect}\r\n                        header={{\r\n                            left: 'title',\r\n                            center: '',\r\n                            right: 'today ,prev, next'\r\n                        }}\r\n                        minTime=\"07:00:00\"\r\n                        maxTime=\"19:30:00\"\r\n                        eventColor=\"green\"\r\n                        eventRender={this.handleMeetingDetail}\r\n                        nowIndicator={true}\r\n                        eventClick = {this.handlePopupDetail}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title={(<h2>新建会议</h2>)}\r\n                    visible={isModalVisible}\r\n                    // visible={true}\r\n                    onOk={this.handleModalOk}\r\n                    onCancel={this.handleModalCancel}\r\n                    width={\"850px\"}\r\n                    okText=\"预约会议\"\r\n                    cancelText=\"取消\"\r\n                    confirmLoading={isSchedule}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <div className={styles.subject_content}>\r\n                        <h3>标题</h3>\r\n                        <InputGroup compact>\r\n                            <Input placeholder=\"标题\" allowClear={true} value={subjectContent} onChange={this.getSubjectContent}></Input>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div style={{marginBottom:\"20px\"}}>\r\n                        <h3>位置</h3>\r\n                        <AutoComplete\r\n                            placeholder={\"输入会议地点\"}\r\n                            style={{ width: 220 }}\r\n                            autoClearSearchValue={true}\r\n                            value={selectedMeetingInfo.name}\r\n                            dataSource={currentRooms}\r\n                            backfill={true}\r\n                            onFocus={this.handleRoomLocationFocus}\r\n                            onSelect={this.handleRoomPositionSelect}\r\n                        />\r\n                    </div>\r\n                    <div style={{marginBottom:\"5px\"}}>\r\n                        <h3>会议时间</h3>\r\n                        <span style={{marginLeft:\"20px\"}}><b >开始时间: </b></span>\r\n                        <span style={{marginRight:\"20px\"}}>\r\n                            <DatePicker\r\n                                locale={locale}\r\n                                placeholder={\"选择开始日期\"}\r\n                                showTime={{\r\n                                    minuteStep:5,\r\n                                    format:\"HH:mm\",\r\n                                    disabledHours:()=>[0,1,2,3,4,5,6,19,20,21,22,23],\r\n                                    hideDisabledOptions:true,\r\n                                    placeholder:\"选择开始时间\"\r\n                                }}\r\n                                defaultValue={moment(localTime.startTime, 'YYYY年MM月DD日 HH:mm')}\r\n                                value={moment(localTime.startTime, 'YYYY年MM月DD日 HH:mm')}\r\n                                format={\"YYYY年MM月DD日 HH:mm\"}\r\n                                onChange={this.handleStartTime}\r\n                                allowClear={false}\r\n                            />\r\n                        </span>\r\n                        <span><b>结束时间: </b></span>\r\n                        <span style={{marginRight:\"5px\"}}>\r\n                            <DatePicker\r\n                                locale={locale}\r\n                                placeholder={\"选择结束日期\"}\r\n                                showTime={{\r\n                                    minuteStep:5,\r\n                                    format:\"HH:mm\",\r\n                                    disabledHours:()=>[0,1,2,3,4,5,6,19,20,21,22,23],\r\n                                    hideDisabledOptions:true,\r\n                                    placeholder:\"选择结束时间\",\r\n\r\n                                }}\r\n                                defaultValue={moment(localTime.endTime, 'YYYY年MM月DD日 HH:mm')}\r\n                                value={moment(localTime.endTime, 'YYYY年MM月DD日 HH:mm')}\r\n                                format={\"YYYY年MM月DD日 HH:mm\"}\r\n                                onChange={this.handleEndTime}\r\n                                allowClear={false}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className={styles.user_email_input}>\r\n                        <h3>邀请联系人</h3>\r\n                        <AutoComplete\r\n                            dataSource={dataSource}\r\n                            style={{ width: 220 }}\r\n                            onSelect={this.onAutoCompleteSelect}\r\n                            onSearch={this.handleAutoCompleteSearch}\r\n                            placeholder=\"搜索邀请人\"\r\n                            value={autoCompleteValue}\r\n                            allowClear={true}\r\n                        />\r\n                    </div>\r\n                    <h3>邀请人列表</h3>\r\n                    <div className={styles.user_email_list}>\r\n                        <List\r\n                            header={<div></div>}\r\n                            itemLayout=\"horizontal\"\r\n                            size=\"small\"\r\n                            bordered\r\n                            dataSource={attendees}\r\n                            renderItem={(item,index) => <List.Item  actions={[<Button type=\"danger\" size=\"small\" onClick={(event) => this.handleDeleteEmailItem(event,index)} >delete</Button>]}>{item}</List.Item>}\r\n                        />\r\n                    </div>\r\n                </Modal>\r\n            </div> \r\n    }\r\n}\r\n\r\nexport default NormalSchedule;\r\n","import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { Button, Row, Col, Card, Descriptions, Menu, Dropdown, Icon, message } from 'antd';\r\nimport { UserAgentApplication } from 'msal';\r\nimport moment from 'moment';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nimport Api from \"../../api/Api\";\r\nimport styles from \"./QuicklySchedule.module.css\"\r\nimport { QuicklyScheduleStore } from \"../../store/QuickStore\"\r\n\r\ntype myProps = {\r\n    store: any\r\n}\r\ntype myState = {\r\n    loading: boolean,\r\n    nextEvent: any,\r\n    currentEvent: any,\r\n    endLoading: boolean,\r\n    delayLoading: boolean,\r\n}\r\n@inject(\"store\") @observer\r\nclass QuicklySchedule extends Component<myProps, myState> {\r\n    public userAgentApplication: UserAgentApplication;\r\n    private startDate: Date = new Date();\r\n    private endDate: Date = new Date();\r\n    private store: QuicklyScheduleStore;\r\n    private _isMounted: boolean = false;\r\n    constructor(props: myProps) {\r\n        super(props)\r\n        this._isMounted = true;\r\n        this.pollingBookMeeting = this.pollingBookMeeting.bind(this);\r\n        this.isBookMeeting = this.isBookMeeting.bind(this);\r\n        this.createMeeting = this.createMeeting.bind(this);\r\n        this.getMeetingTime = this.getMeetingTime.bind(this);\r\n        this.getMyMeetings = this.getMyMeetings.bind(this);\r\n        this.getCurrentAndNextEvents = this.getCurrentAndNextEvents.bind(this);\r\n        this.moveUpEnd = this.moveUpEnd.bind(this);\r\n        this.userAgentApplication = Api.init.msalInstance;\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n        const user = Api.init.getAccount();\r\n        this.state = {\r\n            loading: false,\r\n            nextEvent: null,\r\n            currentEvent: null,\r\n            endLoading: false,\r\n            delayLoading: false,\r\n        };\r\n        this.store = this.props.store.QuicklyStore;\r\n        if(user){\r\n            this.getMyMeetings();\r\n            this.getCurrentAndNextEvents();\r\n        }\r\n\r\n    }\r\n    public componentWillReceiveProps(nextProp:myProps) {\r\n        // 登录成功之后，判断isAuthenticated为登录状态之后。重新将我的预约会议信息更新到页面上。\r\n        const isAuthenticated = nextProp.store.pageStore.isAuthenticated;\r\n        if(isAuthenticated){\r\n            this.getMyMeetings();\r\n            this.getCurrentAndNextEvents();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    private async pollingBookMeeting() {\r\n        if (this._isMounted) {\r\n            this.setState({ loading: true });\r\n        }\r\n        this.startDate = new Date();\r\n        this.endDate = new Date();\r\n        const meetingTime = await this.getMeetingTime(this.startDate, this.endDate);\r\n        let index = 0;\r\n        for (let i = 0; i < meetingTime.value.length; i++) {\r\n            if (meetingTime.value[i].scheduleItems.length === 0) {\r\n                await this.createMeeting(this.startDate, this.endDate, meetingTime.value[i].scheduleId);\r\n                index = 0;\r\n                this.isBookMeeting();\r\n                return;\r\n            }\r\n            index++;\r\n        };\r\n        if (meetingTime.value.length === index) {\r\n            message.warning(\"当前没有会议室！\");\r\n        }\r\n    }\r\n    private async isBookMeeting() {\r\n        const timer = setInterval(async () => {\r\n            const myEvents = await this.getMyMeetings();\r\n            const meetingStatu = myEvents.value[0].attendees[0].status.response;\r\n            if (meetingStatu === \"accepted\") {\r\n                clearInterval(timer);\r\n                if (this._isMounted) {\r\n                    this.setState({ loading: false });\r\n                }\r\n                this.getCurrentAndNextEvents();\r\n            } else if (meetingStatu === \"declined\") {\r\n                clearInterval(timer);\r\n                this.pollingBookMeeting();\r\n            }\r\n        }, 3000)\r\n    }\r\n    private async createMeeting(startDate: Date, endDate: Date, address: string) {\r\n        const events = {\r\n            subject: \"快速预约会议\",\r\n            body: {\r\n                contentType: \"HTML\",\r\n                content: \"Does late morning work for you?\"\r\n            },\r\n            \"start\": {\r\n                \"dateTime\": startDate.toISOString(),\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            \"end\": {\r\n                \"dateTime\": endDate.toISOString(),\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            attendees: [\r\n                {\r\n                    emailAddress: {\r\n                        address: address,\r\n                    },\r\n                    type: \"required\"\r\n                }\r\n            ]\r\n        };\r\n        const client = await Api.init.getAuthenticatedClientToken();\r\n        await client.api('/me/events').post(events).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    private async getMeetingTime(startDate: Date, endDate: Date) {\r\n        endDate.setMinutes(startDate.getMinutes() + 30);\r\n        const allRooms = await Api.init.getAllMeetingRooms();\r\n        const roomArea = this.props.store.settingPageStore.roomArea;\r\n        const schedules: any = [];\r\n        allRooms[roomArea].forEach((element: any) => {\r\n            schedules.push(element.address);\r\n        });\r\n        const events = {\r\n            \"schedules\": schedules,\r\n            \"startTime\": {\r\n                \"dateTime\": startDate,\r\n            },\r\n            \"endTime\": {\r\n                \"dateTime\": endDate,\r\n            },\r\n            \"availabilityViewInterval\": \"30\"\r\n        }\r\n        const client = await Api.init.getAuthenticatedClientToken();\r\n        let res = await client.api('/me/calendar/getSchedule').post(events).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n        console.log(\"all\", res);\r\n        return res;\r\n    }\r\n    private async getMyMeetings() {\r\n        const client = await Api.init.getAuthenticatedClientToken();\r\n        let res = await client.api('/me/events')\r\n            .filter(`isCancelled eq false and isOrganizer eq true`)\r\n            .top(1)\r\n            .get().catch((err)=>{\r\n                console.log(err);\r\n            });\r\n        return res;\r\n    }\r\n    private async getCurrentAndNextEvents() {\r\n        const currentDate = new Date();\r\n        const client = await Api.init.getAuthenticatedClientToken();\r\n        const currentEvent = await client.api('/me/calendar/events')\r\n            .orderby(`start/dateTime asc`)\r\n            .filter(`isCancelled eq false and isOrganizer eq true and start/dateTime le '${currentDate.toISOString()}' and end/dateTime gt '${currentDate.toISOString()}'`)\r\n            .get().catch((err)=>{\r\n                console.log(err);\r\n            })\r\n        if (currentEvent) {\r\n            if (this._isMounted){\r\n                this.setState({ currentEvent: currentEvent.value[0] });\r\n            }     \r\n        }\r\n        const nextEvent = await client.api('/me/calendar/events')\r\n            .orderby(`start/dateTime asc`)\r\n            .count(true)\r\n            .filter(`isCancelled eq false and isOrganizer eq true and start/dateTime gt '${currentDate.toISOString()}'`)\r\n            .top(1)\r\n            .get().catch((err)=>{\r\n                console.log(err);\r\n            });\r\n        if (nextEvent) {\r\n            if (this._isMounted) {\r\n                this.setState({ nextEvent: nextEvent.value[0] })\r\n            }\r\n        }\r\n    }\r\n    private async moveUpEnd() {\r\n        if (this._isMounted){\r\n            this.setState({ endLoading: true });\r\n        }\r\n        const date = new Date();\r\n        date.setSeconds(date.getSeconds() + 3);\r\n        const event = {\r\n            \"end\": {\r\n                \"dateTime\": date.toISOString(),\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            isReminderOn: false,\r\n            iCalUId: this.state.currentEvent.iCalUId,\r\n        };\r\n        const client = await Api.init.getAuthenticatedClientToken();\r\n        await client.api(`/me/events/${this.state.currentEvent.id}`).update(event).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n        await this.getCurrentAndNextEvents();\r\n        if (this._isMounted) {\r\n            this.setState({ endLoading: false });\r\n        }\r\n    }\r\n    private async handleMenuClick(e: any) {\r\n        if (this._isMounted) {\r\n            this.setState({ delayLoading: true });\r\n        }\r\n        let time;\r\n        if (e.key === \"1\") {\r\n            time = moment.utc(this.state.currentEvent.end.dateTime).add(30, \"m\").format();\r\n        } else if (e.key === \"2\") {\r\n            time = moment.utc(this.state.currentEvent.end.dateTime).add(45, \"m\").format();\r\n        } else {\r\n            time = moment.utc(this.state.currentEvent.end.dateTime).add(60, \"m\").format();\r\n        }\r\n        const event = {\r\n            \"end\": {\r\n                \"dateTime\": time,\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            isReminderOn: false,\r\n            iCalUId: this.state.currentEvent.iCalUId,\r\n        };\r\n        const client = await Api.init.getAuthenticatedClientToken();\r\n        await client.api(`/me/events/${this.state.currentEvent.id}`).update(event).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n        await this.getCurrentAndNextEvents();\r\n        if (this._isMounted) {\r\n            this.setState({ delayLoading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const menu = (\r\n            <Menu onClick={this.handleMenuClick}>\r\n                <Menu.Item key=\"1\">30 分钟</Menu.Item>\r\n                <Menu.Item key=\"2\">45 分钟</Menu.Item>\r\n                <Menu.Item key=\"3\">60 分钟</Menu.Item>\r\n            </Menu>\r\n        )\r\n        const myState = this.state;\r\n        console.log(myState);\r\n        let currentMeetingOrganizerName: any;\r\n        let currentMeetingStart: any;\r\n        let currentMeetingEnd: any;\r\n        let currentMeetingName: any;\r\n        let currentMeetingLocationName: any;\r\n        if (myState.currentEvent) {\r\n            currentMeetingOrganizerName = myState.currentEvent.organizer.emailAddress.name;\r\n            currentMeetingStart = moment.utc(myState.currentEvent.start.dateTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n            currentMeetingEnd = moment.utc(myState.currentEvent.end.dateTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n            currentMeetingName = myState.currentEvent.subject;\r\n            currentMeetingLocationName = myState.currentEvent.attendees[0].emailAddress.name;\r\n        }\r\n        let nextMeetingOrganizerName: any;\r\n        let nextMeetingStart: any;\r\n        let nextMeetingEnd: any;\r\n        let nextMeetingName: any;\r\n        let nextMeetingLocationName: any;\r\n        if (myState.nextEvent) {\r\n            nextMeetingOrganizerName = myState.nextEvent.organizer.emailAddress.name;\r\n            nextMeetingStart = moment.utc(myState.nextEvent.start.dateTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n            nextMeetingEnd = moment.utc(myState.nextEvent.end.dateTime).local().format('YYYY年MM月DD日 - HH:mm');\r\n            nextMeetingName = myState.nextEvent.subject;\r\n            nextMeetingLocationName = myState.nextEvent.location.displayName;\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                    <Row gutter={16}>\r\n                        <Col span={24}>\r\n                            <Card title=\"当前会议\" bordered={true}>\r\n                                {\r\n                                    myState.currentEvent ?\r\n                                        <div>\r\n                                            <Descriptions title={currentMeetingName}>\r\n                                                <Descriptions.Item label=\"组织者\">{currentMeetingOrganizerName}</Descriptions.Item>\r\n                                                <Descriptions.Item label=\"开始时间\">{currentMeetingStart}</Descriptions.Item>\r\n                                                <Descriptions.Item label=\"结束时间\">{currentMeetingEnd}</Descriptions.Item>\r\n                                                <Descriptions.Item label=\"地点\">{currentMeetingLocationName}</Descriptions.Item>\r\n\r\n                                            </Descriptions>\r\n                                            <Dropdown overlay={menu}>\r\n                                                <Button type=\"primary\" loading={this.state.delayLoading}>\r\n                                                    延长会议 <Icon type=\"down\" />\r\n                                                </Button>\r\n                                            </Dropdown>\r\n                                            <Button className={styles.moveUpEnd} type=\"primary\" onClick={this.moveUpEnd} loading={this.state.endLoading}>提前结束</Button>\r\n                                        </div> :\r\n                                        <Button type=\"primary\" loading={this.state.loading} onClick={this.pollingBookMeeting}>立即预约</Button>\r\n                                }\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                    <Row gutter={16}>\r\n                        <Col span={24}>\r\n                            <Card title=\"下一个会议\" bordered={true}>\r\n                                {\r\n                                    myState.nextEvent ?\r\n                                        <Descriptions title={nextMeetingName}>\r\n                                            <Descriptions.Item label=\"组织者\">{nextMeetingOrganizerName}</Descriptions.Item>\r\n                                            <Descriptions.Item label=\"开始时间\">{nextMeetingStart}</Descriptions.Item>\r\n                                            <Descriptions.Item label=\"结束时间\">{nextMeetingEnd}</Descriptions.Item>\r\n                                            <Descriptions.Item label=\"地点\">{nextMeetingLocationName}</Descriptions.Item>\r\n                                        </Descriptions> : \"无\"\r\n                                }\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuicklySchedule;\r\n\r\n","import React, {Component} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Radio } from \"antd\";\r\nimport Api from \"../../api/Api\";\r\nimport './SettingPage.css';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nexport interface State {\r\n    roomArea:string\r\n}\r\nexport interface Props {\r\n    store:any\r\n}\r\n@inject(\"store\") @observer\r\nclass SettingPage extends Component<Props,State> {\r\n    public gInitApi:Api;\r\n    private store:any;\r\n    public constructor(props: Props) {\r\n      super(props);\r\n      this.gInitApi = Api.init;\r\n      this.store = this.props.store;\r\n      console.log(this.store.settingPageStore.roomArea);\r\n    }\r\n    public selectRoomArea = async (e:any) => {\r\n\r\n        this.store.settingPageStore.setRoomArea(e.target.value);\r\n        let localUserSettingJson:any = localStorage.getItem(\"RITS_user_setting\");\r\n        let localUserSetting = JSON.parse(localUserSettingJson);\r\n\r\n        let obj = Object.assign({},localUserSetting,{\"selectedArea\":e.target.value})\r\n        localStorage.setItem(\"RITS_user_setting\", JSON.stringify(obj))\r\n        console.log(this.store.settingPageStore.roomArea);\r\n\r\n        // 点击某个会议室，将会议室对应用户的选择区域给设置上。\r\n        // console.log(\"[ID]:\",this.store.pageStore.id)\r\n        // const data = {\r\n        //     \"selectedArea\":this.store.settingPageStore.roomArea,\r\n        // }\r\n        // let res = await this.gInitApi.updateLoginUser(this.store.pageStore.id,data);\r\n    }\r\n    public render () {\r\n        if(!this.store.pageStore.isAuthenticated){\r\n            return (<Redirect to=\"/app\" />);\r\n        }\r\n        return (\r\n            <div className=\"settingPage\">\r\n                <h3>基本设置</h3>\r\n                1.选择会议室区域\r\n                <div>\r\n                    <Radio.Group defaultValue={this.store.settingPageStore.roomArea}  onChange={this.selectRoomArea}>\r\n                        <Radio.Button value=\"g7\">RITS-G7会议室</Radio.Button>\r\n                        <Radio.Button value=\"epqq\">EPQQ会议室</Radio.Button>\r\n                    </Radio.Group>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingPage;","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Icon, Avatar, Dropdown, Modal, Button } from \"antd\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\n// import Util from \"../../common/Util\";\r\n// import \"./Page.css\";\r\nimport styles from './Page.module.css';\r\nimport logo from \"../../ricoh_logo.png\";\r\nimport NormalSchedule from \"../NormalSchedule/NormalSchedule\";\r\nimport QuicklySchedule from \"../QuicklySchedule/QuicklySchedule\";\r\nimport SettingPage from \"../SettingPage/SettingPage\";\r\nimport Api from \"../../api/Api\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\ninterface IProps {\r\n    match: any;\r\n    location: Location;\r\n    history: History;\r\n    store: any;\r\n}\r\ninterface IState {\r\n    collapsed: boolean;\r\n    isAuthenticated: boolean;\r\n    user?: any;\r\n    error?: string | null;\r\n    userPhotoUrl:any;\r\n    isLoginLoading:boolean;\r\n}\r\n@inject(\"store\")\r\n@observer\r\nclass Page extends Component<IProps, IState> {\r\n  private _isMounted = false;\r\n  private store:any;\r\n  public gInitApi: Api;\r\n  constructor (prop: IProps){\r\n      super(prop);\r\n      this.gInitApi = Api.init;\r\n      let user = this.gInitApi.getAccount();\r\n      this.store = this.props.store;\r\n      this.state = {\r\n          collapsed: false,\r\n          isAuthenticated: user !== null,\r\n          user: {\r\n              displayName: \"用户名\",\r\n              email: \"\"\r\n          },\r\n          error: null,\r\n          userPhotoUrl:\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n          isLoginLoading:false\r\n      };\r\n      if (user) {\r\n          // Enhance user object with data from Graph\r\n          this.getUserProfile();\r\n      }\r\n  }\r\n  public async componentDidMount(){\r\n    this._isMounted = true;\r\n  }\r\n  public componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  public getUserProfile = async () => {\r\n    const pageStore =  this.store.pageStore;\r\n    try {\r\n        // Get the access token silently\r\n        // If the cache contains a non-expired token, this function\r\n        // will just return the cached token. Otherwise, it will\r\n        // make a request to the Azure OAuth endpoint to get a token\r\n        // Get the user's profile from Graph\r\n        const userPromise = this.gInitApi.getUserDetails();\r\n        const userPhotoPromise = this.gInitApi.getUserPhotoUrl();\r\n        const accessTokenPromise = this.gInitApi.acquireTokenSilent();\r\n        const [user,userPhoto,accessToken] =  await Promise.all([userPromise,userPhotoPromise,accessTokenPromise]);\r\n        if (accessToken.accessToken) {\r\n          pageStore.setIsAuthenticated(true); \r\n          if(this._isMounted){\r\n            this.setState({\r\n              isAuthenticated:true,\r\n              isLoginLoading:false,\r\n              user: {\r\n                displayName: user.displayName,\r\n                email: user.mail\r\n              },\r\n              error: null,\r\n              userPhotoUrl: userPhoto\r\n            });\r\n          }\r\n        }\r\n        // 从所有登录的用户中取到本地用户的id\r\n        // let loginUsers = await this.gInitApi.getAllLoginedUser();\r\n        // let dataBaseId = Util.getUserSettingId(loginUsers, this.state.user.email);\r\n        const localUserSettingJson:any = localStorage.getItem(\"RITS_user_setting\");\r\n        const localUserSetting = JSON.parse(localUserSettingJson);\r\n        console.log(\"localUserSetting:\",localUserSetting);\r\n        const newUser = {\r\n            \"userEmail\":this.state.user.email,\r\n            \"selectedArea\": \"g7\",\r\n        }\r\n        if(!localUserSetting && this.state.user.email){\r\n            // 没有localstorage时，设置本地储存\r\n            localStorage.setItem(\"RITS_user_setting\", JSON.stringify(newUser))\r\n        }else{\r\n            // 已经有了本地储存情况下，判断当前用户邮箱和本地储存的是否一致\r\n            if(user.mail === localUserSetting.userEmail){\r\n                // 邮箱地址一致的情况下，将本地储存的区域设置到mobx\r\n                this.store.settingPageStore.setRoomArea(localUserSetting.selectedArea);\r\n            }else{\r\n                // 邮箱地址不一致的情况下，将其设置为当前用户的邮箱，同时区域默认设置为g7\r\n                localStorage.setItem(\"RITS_user_setting\", JSON.stringify(newUser))\r\n            }\r\n            // this.store.pageStore.setId(dataBaseId);\r\n        }\r\n        // console.log(\"[Log] 成功拿到当前邮箱账号的id！\",this.store.Id)\r\n    } catch (err) {\r\n        const error = \"get accessToken error !!!\";\r\n        pageStore.setIsAuthenticated(false); \r\n        this.setState({\r\n            isAuthenticated:false,\r\n            isLoginLoading:false,\r\n            user: {},\r\n            error\r\n        });\r\n    }\r\n  };\r\n\r\n  public toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n  public login = async () => {\r\n    const pageStore =  this.store.pageStore;\r\n    try {\r\n      this.setState({\r\n        isLoginLoading:true\r\n      })\r\n      await this.gInitApi.loginPopup();\r\n      await this.getUserProfile();\r\n\r\n    } catch (err) {\r\n      let error = \"Login error！！！\";\r\n      pageStore.setIsAuthenticated(false);\r\n      this.setState({\r\n        isAuthenticated:false,\r\n        isLoginLoading:false,\r\n        error\r\n      });\r\n    }\r\n  };\r\n  public render() {\r\n    const { match, location } = this.props;\r\n    const { isAuthenticated, user, collapsed, userPhotoUrl, isLoginLoading} = this.state;\r\n    console.log(\"page state:\",this.state);\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item onClick={this.gInitApi.logout}>\r\n          <Icon type=\"logout\" />\r\n          <span>退出登录</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    return (\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className={styles.logo}>\r\n            <img style={{ height: \"100%\" }} src={logo} alt=\"logo\" />\r\n          </div>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[\"/app\"]}\r\n            selectedKeys={[location.pathname]}\r\n          >\r\n            <Menu.Item key=\"/app\">\r\n              <Link to={match.url}>\r\n                <Icon type=\"schedule\" />\r\n                <span>快速抢会议室</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/app/normal\">\r\n              <Link to={`${match.url}/normal`}>\r\n                <Icon type=\"gold\" />\r\n                <span>预约会议室</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/app/other\">\r\n              <Link to={`${match.url}/other`}>\r\n                <Icon type=\"setting\" />\r\n                <span>设定选项</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{ position: \"relative\", background: \"#fff\", padding: 0 }}\r\n          >\r\n            <Icon\r\n              className={styles.trigger}\r\n              type={collapsed ? \"menu-unfold\" : \"menu-fold\"}\r\n              onClick={this.toggle}\r\n            />\r\n            <span style={{ position: \"absolute\", right: \"40px\" }}>\r\n              <Dropdown overlay={menu}>\r\n                <a href=\"###\">\r\n                  <Avatar src={userPhotoUrl} />\r\n                  <span style={{ fontSize: \"16px\" }}> {user.displayName}</span>\r\n                </a>\r\n              </Dropdown>\r\n            </span>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              background: \"#fff\",\r\n              minHeight: 280\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route exact path={match.path} component={QuicklySchedule} />\r\n              <Route\r\n                path={`${match.path}/normal`}\r\n                component={NormalSchedule}\r\n              />\r\n              <Route path={`${match.path}/other`} component={SettingPage} />\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n        <Modal\r\n        title=\"登录\"\r\n        visible={!isAuthenticated}\r\n        footer={<Button type=\"primary\" loading={isLoginLoading} onClick={this.login}>使用O365账号登录</Button>}\r\n        centered={true}\r\n        closable={false}\r\n      >\r\n          <p>欢迎来到RITS内部会议预约系统</p>\r\n          <p>如需使用该系统进行会议预约请使用公司的O365邮箱账号进行登录！</p>\r\n          <p>目前会议房间只支持RITS G7会议室和EPQQ会议室！</p>\r\n          <p>谢谢！</p>\r\n        </Modal>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Api from \"../../api/Api\";\r\n\r\nimport \"./Login.css\";\r\n\r\nexport interface Props {\r\n  history: History;\r\n}\r\nexport interface State {\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n  public gInitApi: Api;\r\n\r\n  public constructor(props: Props) {\r\n    super(props);\r\n    this.gInitApi = Api.init;\r\n\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      error: null\r\n    };\r\n  }\r\n  public getUserProfile = async () => {\r\n    try {\r\n      let accessToken = await this.gInitApi.acquireTokenSilent();\r\n      // console.log(accessToken);\r\n      if (accessToken) {\r\n        this.setState({\r\n          isAuthenticated: true,\r\n          error: null\r\n        });\r\n      }\r\n    } catch (err) {\r\n      let error = \"get accessToken error !!!\";\r\n      this.setState({\r\n        isAuthenticated: false,\r\n        error\r\n      });\r\n    }\r\n  };\r\n  public login = async () => {\r\n    try {\r\n      await this.gInitApi.loginPopup();\r\n      await this.getUserProfile();\r\n    } catch (err) {\r\n      let error = \"Login error！！！\";\r\n      this.setState({\r\n        isAuthenticated: false,\r\n        error\r\n      });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n \r\n    return <Redirect to=\"/app\" />;\r\n\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import { quicklyStore } from \"./QuickStore\";\r\nimport { settingPageStore } from \"./SettingPageStore\";\r\nimport { pageStore } from \"./PageStore\";\r\n\r\nexport const stores = {\r\n    quicklyStore,\r\n    settingPageStore,\r\n    pageStore\r\n}","import { observable, action, autorun } from \"mobx\";\r\n\r\nexport class QuicklyScheduleStore {\r\n    @observable Qloading: boolean = false;\r\n    constructor() {\r\n        autorun(reaction => { console.log(this.Qloading) });\r\n        // disposer();\r\n    }\r\n    @action a = () => {\r\n        this.Qloading = true;\r\n    }\r\n}\r\n\r\nconst quicklyStore = new QuicklyScheduleStore();\r\nexport { quicklyStore }","import { observable, action} from \"mobx\";\r\n\r\nclass SettingPageStore {\r\n    @observable roomArea:string = \"g7\";\r\n    @action setRoomArea = (area:string)=>{\r\n        this.roomArea = area;\r\n    }\r\n}\r\n\r\nconst settingPageStore = new SettingPageStore();\r\nexport { settingPageStore }","import { observable, action } from \"mobx\";\r\n\r\nclass PageStore {\r\n    @observable id:any;\r\n    @observable isAuthenticated:boolean = false;\r\n    @action setId = (id:any)=>{\r\n        this.id = id;\r\n    }\r\n    @action setIsAuthenticated = (isAuthenticated:boolean)=>{\r\n        this.isAuthenticated = isAuthenticated;\r\n    }\r\n}\r\n\r\nconst pageStore = new PageStore();\r\nexport { pageStore }","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport { Provider } from 'mobx-react';\r\nimport Page from '../Page/Page';\r\nimport './App.css';\r\nimport Login from '../Login/Login';\r\nimport { stores } from \"../../store/Store\"\r\n\r\nexport interface State {\r\n\r\n}\r\nexport interface Props {\r\n\r\n}\r\nclass App extends Component<Props, State> {\r\n    public constructor(props: Props) {\r\n        super(props);\r\n    }\r\n    public render() {\r\n        return (\r\n            <Provider store={stores}>\r\n                <div className=\"App\">\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Login} />\r\n                            <Route path=\"/app\" component={Page}/>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n// 浏览器兼容\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}